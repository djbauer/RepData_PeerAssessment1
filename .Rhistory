dim(pm0)
head(pm0)
cnames
cnames <- strsplit(cnames, '|', fixed = TRUE)
cnames
names(pm0) <- make.names(cnames[[1]][wcol])
head(pm0)
x0 <- pm0$Sample.Value
str(xo)
str(x0)
mean(is.na(x0))
names(pm1) <- make.names(cnames[[1]][wcol])
dim(pm1)
x1 <- pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0,x1)
boxplot(log10(x0),log10(x1)
)
negative <- x1<0
sum(negative,na.rm=TRUE)
mean(negative,na.rm=TRUE)
dates <- pm1$Date
str(dates)
dates <- as.Date(as.character(dates), "%Y%m%d")
head(dates)
hist(dates[negative], "month")
str(site0)
both <- intersect(site0,site1)
both
head(pm0)
cnt0 <- subset(pm0, State.Code == 36 & county.site %in% both)
cnt1 <- subset(pm1, State.Code == 36 & county.site %in% both)
sapply(split(cnt0,cnt0$county.site,nrow))
sapply(split(cnt0, cnt0$county.site), nrow)
sapply(split(cnt1, cnt1$county.site), nrow)
pm0sub <- subset(cnt0, County.code == 63 & Site.ID == 2008)
pm0sub <- subset(cnt0, County.Code == 63 & Site.ID == 2008)
pm1sub <- subset(cnt1, County.Code == 63 & Site.ID == 2008)
x0sub <- pm0sub$Sample.Value
x1sub <- pm1sub$Sample.Value
dates0 <- as.Date(as.character(pm0sub$Date), "%Y%m%d")
dates1 <- as.Date(as.character(pm1sub$Date), "%Y%m%d")
par(mfrow=c(1,2))
par(mfrow=c(1,2), mar=c(4,4,2,1))
plot(dates0,x0sub,pch=20)
abline(h=median(x0sub,na.rm=TRUE), lwd=2)
plot(dates1,x1sub,pch=20)
abline(h=median(x1sub,na.rm=TRUE), lwd=2)
rng <- range(x0sub,x1sub,na.rm=TRUE)
rng
mn0 <- with(pm0, tapply(Sample.Value, State.Code, mean, na.rm = TRUE))
str(mn0)
mn1 <- with(pm1, tapply(Sample.Value, State.Code, mean, na.rm = TRUE))
str(mn1)
summary(mn0)
summary(mn1)
d0 <- data.frame(state=names(mn0), mean=mn0)
d1 <- data.frame(state=names(mn1), mean=mn1)
mrg <- merge(d0,d1,by="state")
dim(mrg)
head(mrg)
with(mrg, plot(rep(1,52), mrg[,2], xlim = c(.5,2.5)))
with(mrg, points(rep(2,52), mrg[,3]))
segments(rep(1,52), rep(2,52), mrg[,2], mrg[,3])
segments(rep(1,52), mrg[,2], rep(2,52), mrg[,3])
mrg[mrg$mean.x < mrg$mean.y,]
install.packages("knitr")
install.packages("markdown")
library(knitr)
setwd("C:/Users/djbauer/Dropbox/Coursera/05 - reproduce/RepData_PeerAssessment1")
?exdir
??exdir
?unzip
if(!file.exists("./activity.zip")){
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip",
destfile = "./activity.zip")}
if(!file.exists("./data/activity.csv")){unzip("./activity.zip", exdir = "./data")}
if(!exists("activity")){activity <- read.csv("./data/activity.csv")}
#Step 1
if(!exists("daytotals")){daytotals <- aggregate(activity$steps, list(activity$date), sum)}
colnames(daytotals) <- c("Date","MeanSteps")
#Step 2
hist(daytotals$MeanSteps,
main = "Histogram of Total Steps per Day\n2012-10-01 to 2012-11-30",
ylab = "Frequency (# of days)",
xlab = "Total Steps per Day (5000-step bins)",
ylim = c(0,30))
#Step 3
daymean <- mean(daytotals$MeanSteps, na.rm = TRUE)
daymean <- format(daymean, scientific = FALSE)
daymedian <- median(daytotals$MeanSteps, na.rm = TRUE)
#The following markdown text will report the mean and median inline with a third-level header and bolded values:
#"### The mean total number of steps taken each day is **`r daymean`**."
#"### The median total number of steps taken each day is **`r daymedian`**."
#Step 1
if(!exists("intervalmeans")){intervalmeans <- aggregate(activity$steps, list(activity$interval), mean)}
colnames(intervalmeans) <- c("Date","MeanSteps")
summary(intervalmeans)
#Step 1
if(!exists("intervalmeans")){intervalmeans <- aggregate(activity$steps, list(activity$interval), mean, na.rm = TRUE)}
colnames(intervalmeans) <- c("Date","MeanSteps")
summary(intervalmeans)
?aggregate
summary(activity$interval)
#Step 1
if(!exists("intervalmeans")){intervalmeans <- aggregate(activity$steps, list(activity$interval), mean, na.rm = TRUE)}
colnames(intervalmeans) <- c("Interval","MeanSteps")
#Step 1
if(!exists("daytotals")){daytotals <- aggregate(activity$steps, list(activity$date), sum)}
colnames(daytotals) <- c("Date","TotalSteps")
#Step 2
hist(daytotals$TotalSteps,
main = "Histogram of Total Steps per Day\n2012-10-01 to 2012-11-30",
ylab = "Frequency (# of days)",
xlab = "Total Steps per Day (5000-step bins)",
ylim = c(0,30))
#Step 3
daymean <- mean(daytotals$TotalSteps, na.rm = TRUE)
daymean <- format(daymean, scientific = FALSE)
daymedian <- median(daytotals$TotalSteps, na.rm = TRUE)
#The following markdown text will report the mean and median inline with a third-level header and bolded values:
#"### The mean total number of steps taken each day is **`r daymean`**."
#"### The median total number of steps taken each day is **`r daymedian`**."
if(!file.exists("./activity.zip")){
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip",
destfile = "./activity.zip")}
if(!file.exists("./data/activity.csv")){unzip("./activity.zip", exdir = "./data")}
if(!exists("activity")){activity <- read.csv("./data/activity.csv")}
summary(activity$steps)
summary(activity$steps, na.rm=true)
unique(activity$interval)
unique(intervalmeans$MeanSteps)
#Step 1
if(!exists("intervalmeans")){intervalmeans <- aggregate(activity$steps, list(activity$interval), mean, na.action = omit)}
colnames(intervalmeans) <- c("Interval","MeanSteps")
summary(intervalmeans$MeanSteps)
#Step 1
if(!exists("intervalmeans")){intervalmeans <- aggregate(activity$steps, list(activity$interval), mean, na.action = na.omit)}
colnames(intervalmeans) <- c("Interval","MeanSteps")
summary(intervalmeans$MeanSteps)
#Step 1
if(!exists("intervalmeans")){intervalmeans <- aggregate(activity$steps, list(activity$interval), mean(na.rm = TRUE))}
colnames(intervalmeans) <- c("Interval","MeanSteps")
summary(intervalmeans$MeanSteps)
?aggregate
#Step 1
if(!exists("intervalmeans")){intervalmeans <- aggregate(activity$steps, list(activity$interval), mean}
#Step 1
if(!exists("intervalmeans")){intervalmeans <- aggregate(activity$steps, list(activity$interval), mean)}
colnames(intervalmeans) <- c("Interval","MeanSteps")
mean(activity$steps, na.rm = true)
mean(activity$steps, na.rm = TRUE)
mean(activity$steps)
#Step 1
if(!exists("intervalmeans")){intervalmeans <- aggregate(mean(activity$steps, na.rm = TRUE), list(activity$interval)}
#Step 1
if(!exists("intervalmeans")){intervalmeans <- aggregate(mean(activity$steps, na.rm = TRUE), list(activity$interval), mean}
#Step 1
if(!exists("intervalmeans")){intervalmeans <- aggregate(activity$steps, list(activity$interval), mean}
#Step 1
if(!exists("intervalmeans")){intervalmeans <- aggregate(activity$steps, list(activity$interval), mean)}
colnames(intervalmeans) <- c("Interval","MeanSteps")
plot(intervalmeans$MeanSteps ~ intervalmeans$Interval)
plot(intervalmeans$MeanSteps ~ intervalmeans$Interval, na.rm = TRUE)
qplot(intervalmeans$MeanSteps ~ intervalmeans$Interval, na.rm = TRUE)
#Step 1
library(ggplot2)
qplot(intervalmeans$MeanSteps ~ intervalmeans$Interval)
rm(intervalmeans)
qplot(activity$steps)
qplot(activity$steps ~ activity$interval)
#Step 1
library(dplyr)
intervalmeans <- group_by(activity, interval, drop = TRUE)
library(ggplot2)
#if(!exists("intervalmeans")){intervalmeans <- aggregate(activity$steps, list(activity$interval), mean)}
#colnames(intervalmeans) <- c("Interval","MeanSteps")
View(head(intervalmeans))
#Step 1
library(dplyr)
intervalmeans <- activity %>%
group_by(interval) %>%
summarise(mean = mean(date))
library(ggplot2)
#if(!exists("intervalmeans")){intervalmeans <- aggregate(activity$steps, list(activity$interval), mean)}
#colnames(intervalmeans) <- c("Interval","MeanSteps")
#Step 1
library(dplyr)
intervalmeans <- activity %>%
group_by(interval) %>%
summarise(mean = mean(steps))
library(ggplot2)
#if(!exists("intervalmeans")){intervalmeans <- aggregate(activity$steps, list(activity$interval), mean)}
#colnames(intervalmeans) <- c("Interval","MeanSteps")
summary(intervalmeans)
#Step 1
library(dplyr)
intervalmeans <- activity %>%
group_by(interval) %>%
summarise(mean = mean(steps, na.rm = TRUE))
library(ggplot2)
#if(!exists("intervalmeans")){intervalmeans <- aggregate(activity$steps, list(activity$interval), mean)}
#colnames(intervalmeans) <- c("Interval","MeanSteps")
summary(intervalmeans)
View(intervalmeans)
qplot(intervalmeans)
qplot(intervalmeans$mean)
qplot(intervalmeans$mean ~ intervalmeans$interval)
#Step 1
#I tried to use aggregate like I did above but couldn't get it to deal with NA values properly so I tried dplyr instead... this works fine.
library(dplyr)
intervalmeans <- activity %>%
group_by(interval) %>%
summarise(meansteps = mean(steps, na.rm = TRUE))
#Now make a quick plot using ggplot2.
library(ggplot2)
qplot()
#if(!exists("intervalmeans")){intervalmeans <- aggregate(activity$steps, list(activity$interval), mean)}
#colnames(intervalmeans) <- c("Interval","MeanSteps")
#Step 1
#I tried to use aggregate like I did above but couldn't get it to deal with NA values properly so I tried dplyr instead... this works fine.
library(dplyr)
intervalmeans <- activity %>%
group_by(interval) %>%
summarise(meansteps = mean(steps, na.rm = TRUE))
#Now make a quick plot using ggplot2.
library(ggplot2)
qplot(interval, meansteps, data = intervalmeans)
#if(!exists("intervalmeans")){intervalmeans <- aggregate(activity$steps, list(activity$interval), mean)}
#colnames(intervalmeans) <- c("Interval","MeanSteps")
#Step 1
#I tried to use aggregate like I did above but couldn't get it to deal with NA values properly so I tried dplyr instead... this works fine.
library(dplyr)
intervalmeans <- activity %>%
group_by(interval) %>%
summarise(meansteps = mean(steps, na.rm = TRUE))
#Now make a quick plot using ggplot2.
library(ggplot2)
qplot(interval, meansteps, data = intervalmeans, geom = "line")
#Step 1
#I tried to use aggregate like I did above but couldn't get it to deal with NA values properly so I tried dplyr instead... this works fine.
library(dplyr)
intervalmeans <- activity %>%
group_by(interval) %>%
summarise(meansteps = mean(steps, na.rm = TRUE))
#Now make a quick plot using ggplot2.
library(ggplot2)
qplot(interval, meansteps, data = intervalmeans, geom = "line") + main("Title")
#Step 1
#I tried to use aggregate like I did above but couldn't get it to deal with NA values properly so I tried dplyr instead... this works fine.
library(dplyr)
intervalmeans <- activity %>%
group_by(interval) %>%
summarise(meansteps = mean(steps, na.rm = TRUE))
#Now make a quick plot using ggplot2.
library(ggplot2)
qplot(interval, meansteps, data = intervalmeans, geom = "line", main = "Average Steps by Interval\nAcross Days", ylab = "Average Steps (#)", xlab = "Interval (5-minute increments)")
#Step 1
#I tried to use aggregate for the means like I did above for the sums but couldn't get it to deal with NA values properly so I tried dplyr instead... this works fine.
intervalmeans <- activity %>%
group_by(interval) %>%
summarise(meansteps = mean(steps, na.rm = TRUE))
#Now make a quick plot using ggplot2.
qplot(interval, meansteps, data = intervalmeans, geom = "line", main = "Average Steps by Interval\nAcross Days (2012-10-01 to 2012-11-30)", ylab = "Average Steps (#)", xlab = "Interval (5-minute increments)")
#Step 2
maxinterval <- intervalmeans %>% filter(maximum == max(meansteps))
#Step 1
#I tried to use aggregate for the means like I did above for the sums but couldn't get it to deal with NA values properly so I tried dplyr instead... this works fine.
intervalmeans <- activity %>%
group_by(interval) %>%
summarise(meansteps = mean(steps, na.rm = TRUE))
#Now make a quick plot using ggplot2.
qplot(interval, meansteps, data = intervalmeans, geom = "line", main = "Average Steps by Interval\nAcross Days (2012-10-01 to 2012-11-30)", ylab = "Average Steps (#)", xlab = "Interval (5-minute increments)")
#Step 2
maxinterval <- intervalmeans %>% filter(interval == max(meansteps))
#Step 1
#I tried to use aggregate for the means like I did above for the sums but couldn't get it to deal with NA values properly so I tried dplyr instead... this works fine.
intervalmeans <- activity %>%
group_by(interval) %>%
summarise(meansteps = mean(steps, na.rm = TRUE))
#Now make a quick plot using ggplot2.
qplot(interval, meansteps, data = intervalmeans, geom = "line", main = "Average Steps by Interval\nAcross Days (2012-10-01 to 2012-11-30)", ylab = "Average Steps (#)", xlab = "Interval (5-minute increments)")
#Step 2
maxinterval <- intervalmeans %>% filter(meansteps == max(meansteps))
sum(is.na(activity))
sum(is.na(activity$steps))
sum(is.na(activity$date))
sum(is.na(activity$interval))
View(daytotals)
#Step 1
NAtotal <- sum(is.na(activity))
NApercentage <- NAtotal/nrow(activity)
#Step 2
#I will replace the missing values with the mean for the 5-minute interval across days. These values are found in the previously-created intervalmeans object.
#imputed <- activity %>%
#Step 1
NAtotal <- sum(is.na(activity))
NApercentage <- NAtotal/nrow(activity)*100
#Step 2
#I will replace the missing values with the mean for the 5-minute interval across days. These values are found in the previously-created intervalmeans object.
#imputed <- activity %>%
#Step 1
NAtotal <- sum(is.na(activity))
NApercentage <- format(NAtotal/nrow(activity)*100, 2)
#Step 2
#I will replace the missing values with the mean for the 5-minute interval across days. These values are found in the previously-created intervalmeans object.
#imputed <- activity %>%
?format
#Step 1
NAtotal <- sum(is.na(activity))
NApercentage <- format(NAtotal/nrow(activity)*100, digits = 4)
#Step 2
#I will replace the missing values with the mean for the 5-minute interval across days. These values are found in the previously-created intervalmeans object and can be matched on interval.
imputed <- activity$steps[match(intervalmeans$interval, activity$interval)]
View(imputed)
#Step 1
NAtotal <- sum(is.na(activity))
NApercentage <- format(NAtotal/nrow(activity)*100, digits = 4)
#Step 2
#I will replace the missing values with the mean for the 5-minute interval across days. These values are found in the previously-created intervalmeans object and can be matched on interval.
imputed <- is.na(activity$steps)[match(intervalmeans$interval, activity$interval)]
?match
#Step 1
NAtotal <- sum(is.na(activity))
NApercentage <- format(NAtotal/nrow(activity)*100, digits = 4)
#Step 2
#I will replace the missing values with the mean for the 5-minute interval across days. These values are found in the previously-created intervalmeans object and can be matched on interval.
imputed <- activity$steps[match(activity$interval, intervalmeans$interval)]
View(imputed)
#Step 1
NAtotal <- sum(is.na(activity))
NApercentage <- format(NAtotal/nrow(activity)*100, digits = 4)
#Step 2
#I will replace the missing values with the mean for the 5-minute interval across days. These values are found in the previously-created intervalmeans object and can be matched on interval.
imputed <- activity
imputed <- activity$steps[match(activity$interval, intervalmeans$interval)]
#Step 1
NAtotal <- sum(is.na(activity))
NApercentage <- format(NAtotal/nrow(activity)*100, digits = 4)
#Step 2
#I will replace the missing values with the mean for the 5-minute interval across days. These values are found in the previously-created intervalmeans object and can be matched on interval.
imputed <- activity
imputed$steps[match(imputed$interval, intervalmeans$interval)]
#Step 1
NAtotal <- sum(is.na(activity))
NApercentage <- format(NAtotal/nrow(activity)*100, digits = 4)
#Step 2
#I will replace the missing values with the mean for the 5-minute interval across days. These values are found in the previously-created intervalmeans object and can be matched on interval.
imputed <- activity
imputed$steps <- imputed$steps[match(imputed$interval, intervalmeans$interval)]
#Step 1
#I tried to use aggregate for the means like I did above for the sums but couldn't get it to deal with NA values properly so I tried dplyr instead.
intervalmeans <- activity %>% group_by(interval) %>% summarise(steps = mean(steps, na.rm = TRUE))
#Now make a quick plot using ggplot2.
qplot(interval, steps, data = intervalmeans, geom = "line", main = "Average Steps by Interval\nAcross Days (2012-10-01 to 2012-11-30)", ylab = "Average Steps (#)", xlab = "Interval (5-minute increments)")
#Step 2
maxinterval <- intervalmeans %>% filter(steps == max(steps))
#Step 1
NAtotal <- sum(is.na(activity))
NApercentage <- format(NAtotal/nrow(activity)*100, digits = 4)
#Step 2
#I will replace the missing values with the mean for the 5-minute interval across days. These values are found in the previously-created intervalmeans object and can be matched on interval.
imputed <- activity
imputed$steps <- imputed$steps[match(intervalmeans$interval, imputed$interval)]
#Step 1
NAtotal <- sum(is.na(activity))
NApercentage <- format(NAtotal/nrow(activity)*100, digits = 4)
#Step 2
#I will replace the missing values with the mean for the 5-minute interval across days. These values are found in the previously-created intervalmeans object and can be matched on interval.
imputed <- activity
#df1$B[is.na(df1$B)] <- df2$B[match(df1$A[is.na(df1$B)],df2$A)]
imputed$steps[is.na(imputed$steps)] <- intervalmeans$steps[match(imputed$interval[is.na(imputed$steps)], intervalmeans$steps)]
#Step 1
NAtotal <- sum(is.na(activity))
NApercentage <- format(NAtotal/nrow(activity)*100, digits = 4)
#Step 2
#I will replace the missing values with the mean for the 5-minute interval across days. These values are found in the previously-created intervalmeans object and can be matched on interval.
imputed <- activity
#df1$B[is.na(df1$B)] <- df2$B[match(df1$A[is.na(df1$B)],df2$A)]
imputed$steps[is.na(imputed$steps)] <- intervalmeans$steps[match(imputed$interval[is.na(imputed$steps)], intervalmeans$interval)]
?weekdays
imputed$day <- weekdays(imputed$date)
imputed$day <- weekdays(as.Date(imputed$date))
View(imputed)
imputed$day <- weekdays(as.Date(imputed$date))
imputed$day[c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")] <- imputed$day["Weekday"]
imputed$day <- weekdays(as.Date(imputed$date))
weekdaylist <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
imputed$day <- factor(imputed$day %in% weekdays1, levels=c(FALSE, TRUE), labels=c('weekend', 'weekday')
imputed$day <- weekdays(as.Date(imputed$date))
weekdaylist <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
imputed$day <- factor(imputed$day %in% weekdaylist, levels=c(FALSE, TRUE), labels=c('weekend', 'weekday')
imputed$day <- weekdays(as.Date(imputed$date))
weekdaylist <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
imputed$day <- factor(imputed$day %in% weekdaylist, levels=c(FALSE, TRUE), labels=c('weekend', 'weekday'))
imputed$day <- weekdays(as.Date(imputed$date))
weekdaylist <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
imputed$day <- as.factor(imputed$day %in% weekdaylist, levels=c(FALSE, TRUE), labels=c('weekend', 'weekday'))
imputed$day <- weekdays(as.Date(imputed$date))
weekdaylist <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
imputed$day <- factor(imputed$day %in% weekdaylist, levels=c(FALSE, TRUE), labels=c('weekend', 'weekday'))
#Step 1
imputed$day <- weekdays(as.Date(imputed$date))
weekdaylist <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
imputed$day <- factor(imputed$day %in% weekdaylist, levels=c(FALSE, TRUE), labels=c('weekend', 'weekday'))
#Step 2
qplot(interval~day, steps, data = imputed, geom = "line", main = "Average Steps by Interval\nAcross Days (2012-10-01 to 2012-11-30)", ylab = "Average Steps (#)", xlab = "Interval (5-minute increments)")
#Step 1
imputed$day <- weekdays(as.Date(imputed$date))
weekdaylist <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
imputed$day <- factor(imputed$day %in% weekdaylist, levels=c(FALSE, TRUE), labels=c('weekend', 'weekday'))
#Step 2
qplot(interval, steps, data = imputed, geom = "line", main = "Average Steps by Interval\nAcross Days (2012-10-01 to 2012-11-30)", ylab = "Average Steps (#)", xlab = "Interval (5-minute increments)", rows = vars(day))
#Step 1
imputed$day <- weekdays(as.Date(imputed$date))
weekdaylist <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
imputed$day <- factor(imputed$day %in% weekdaylist, levels=c(FALSE, TRUE), labels=c('weekend', 'weekday'))
#Step 2
qplot(interval, steps, data = imputed, geom = "line", main = "Average Steps by Interval\nAcross Days (2012-10-01 to 2012-11-30)", ylab = "Average Steps (#)", xlab = "Interval (5-minute increments)", facet_grid(rows = vars(day)))
#Step 1
imputed$day <- weekdays(as.Date(imputed$date))
weekdaylist <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
imputed$day <- factor(imputed$day %in% weekdaylist, levels=c(FALSE, TRUE), labels=c('weekend', 'weekday'))
#Step 2
qplot(interval, steps, data = imputed, geom = "line", main = "Average Steps by Interval\nAcross Days (2012-10-01 to 2012-11-30)", ylab = "Average Steps (#)", xlab = "Interval (5-minute increments)", aes(facet_grid(rows = vars(day))))
#Step 1
imputed$day <- weekdays(as.Date(imputed$date))
weekdaylist <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
imputed$day <- factor(imputed$day %in% weekdaylist, levels=c(FALSE, TRUE), labels=c('weekend', 'weekday'))
#Step 2
p <- qplot(interval, steps, data = imputed, geom = "line", main = "Average Steps by Interval\nAcross Days (2012-10-01 to 2012-11-30)", ylab = "Average Steps (#)", xlab = "Interval (5-minute increments)")
p + facet_grid(rows = vars(day))
#Step 1
imputed$day <- weekdays(as.Date(imputed$date))
weekdaylist <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
imputed$day <- factor(imputed$day %in% weekdaylist, levels=c(FALSE, TRUE), labels=c('weekend', 'weekday'))
#Step 2
imputedmeans <- imputed %>% group_by(interval) %>% summarise(steps = mean(steps, na.rm = TRUE))
p <- qplot(interval, steps, data = imputed, geom = "line", main = "Average Steps by Interval (Using Imputed Data)\nAcross Days (2012-10-01 to 2012-11-30)", ylab = "Average Steps (#)", xlab = "Interval (5-minute increments)")
p + facet_grid(rows = vars(day))
#Step 1
imputed$day <- weekdays(as.Date(imputed$date))
weekdaylist <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
imputed$day <- factor(imputed$day %in% weekdaylist, levels=c(FALSE, TRUE), labels=c('weekend', 'weekday'))
#Step 2
imputedmeans <- imputed %>% group_by(interval) %>% summarise(steps = mean(steps, na.rm = TRUE), day)
#Step 1
imputed$day <- weekdays(as.Date(imputed$date))
weekdaylist <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
imputed$day <- factor(imputed$day %in% weekdaylist, levels=c(FALSE, TRUE), labels=c('weekend', 'weekday'))
#Step 2
imputedmeans <- imputed %>% group_by(interval) %>% summarise(steps = mean(steps, na.rm = TRUE), day = mode(day))
p <- qplot(interval, steps, data = imputed, geom = "line", main = "Average Steps by Interval (Using Imputed Data)\nAcross Days (2012-10-01 to 2012-11-30)", ylab = "Average Steps (#)", xlab = "Interval (5-minute increments)")
p + facet_grid(rows = vars(day))
#Step 1
imputed$day <- weekdays(as.Date(imputed$date))
weekdaylist <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
imputed$day <- factor(imputed$day %in% weekdaylist, levels=c(FALSE, TRUE), labels=c('weekend', 'weekday'))
#Step 2
imputedmeans <- imputed %>% group_by(interval) %>% summarise(steps = mean(steps, na.rm = TRUE), day = day)
#Step 1
imputed$day <- weekdays(as.Date(imputed$date))
weekdaylist <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
imputed$day <- factor(imputed$day %in% weekdaylist, levels=c(FALSE, TRUE), labels=c('weekend', 'weekday'))
#Step 2
imputedmeans <- imputed %>% group_by(interval) %>% summarise(steps = mean(steps, na.rm = TRUE), day = "day"")
p <- qplot(interval, steps, data = imputed, geom = "line", main = "Average Steps by Interval (Using Imputed Data)\nAcross Days (2012-10-01 to 2012-11-30)", ylab = "Average Steps (#)", xlab = "Interval (5-minute increments)")
#Step 1
imputed$day <- weekdays(as.Date(imputed$date))
weekdaylist <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
imputed$day <- factor(imputed$day %in% weekdaylist, levels=c(FALSE, TRUE), labels=c('weekend', 'weekday'))
#Step 2
imputedmeans <- imputed %>% group_by(interval) %>% summarise(steps = mean(steps, na.rm = TRUE), day = "day")
p <- qplot(interval, steps, data = imputed, geom = "line", main = "Average Steps by Interval (Using Imputed Data)\nAcross Days (2012-10-01 to 2012-11-30)", ylab = "Average Steps (#)", xlab = "Interval (5-minute increments)")
p + facet_grid(rows = vars(day))
#Step 1
imputed$day <- weekdays(as.Date(imputed$date))
weekdaylist <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
imputed$day <- factor(imputed$day %in% weekdaylist, levels=c(FALSE, TRUE), labels=c('weekend', 'weekday'))
#Step 2
imputedmeans <- imputed %>% group_by(interval) %>% summarise(steps = mean(steps, na.rm = TRUE), day = "")
p <- qplot(interval, steps, data = imputedmeans, geom = "line", main = "Average Steps by Interval (Using Imputed Data)\nAcross Days (2012-10-01 to 2012-11-30)", ylab = "Average Steps (#)", xlab = "Interval (5-minute increments)")
p + facet_grid(rows = vars(day))
#Step 1
imputed$day <- weekdays(as.Date(imputed$date))
weekdaylist <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
imputed$day <- factor(imputed$day %in% weekdaylist, levels=c(FALSE, TRUE), labels=c('weekend', 'weekday'))
#Step 2
imputedmeans <- imputed %>% group_by(interval) %>% summarise(steps = mean(steps, na.rm = TRUE), day = day)
#Step 1
imputed$day <- weekdays(as.Date(imputed$date))
weekdaylist <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
imputed$day <- factor(imputed$day %in% weekdaylist, levels=c(FALSE, TRUE), labels=c('weekend', 'weekday'))
#Step 2
imputedmeans <- imputed %>% group_by(interval) %>% summarise(steps = mean(steps, na.rm = TRUE), day = modal(day))
?mode
#Step 1
imputed$day <- weekdays(as.Date(imputed$date))
weekdaylist <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
imputed$day <- factor(imputed$day %in% weekdaylist, levels=c(FALSE, TRUE), labels=c('weekend', 'weekday'))
#Step 2
imputedmeans <- imputed %>% group_by(interval) %>% summarise(steps = mean(steps, na.rm = TRUE), day = unique(day))
#Step 1
imputed$day <- weekdays(as.Date(imputed$date))
weekdaylist <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
imputed$day <- factor(imputed$day %in% weekdaylist, levels=c(FALSE, TRUE), labels=c('weekend', 'weekday'))
#Step 2
imputedmeans <- imputed %>% group_by(interval, day) %>% summarise(steps = mean(steps, na.rm = TRUE))
p <- qplot(interval, steps, data = imputedmeans, geom = "line", main = "Average Steps by Interval (Using Imputed Data)\nAcross Days (2012-10-01 to 2012-11-30)", ylab = "Average Steps (#)", xlab = "Interval (5-minute increments)")
p + facet_grid(rows = vars(day))
